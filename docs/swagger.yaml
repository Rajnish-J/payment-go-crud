basePath: /
definitions:
  models.Company:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.Payment:
    properties:
      amount:
        type: number
      id:
        type: integer
      mode:
        description: '"Cash", "UPI", "Card"'
        type: string
      payment_time:
        type: string
      product_id:
        type: integer
      reward_desc:
        type: string
      reward_title:
        type: string
      status:
        description: '"Completed", "Failed"'
        type: string
      use_rewards:
        description: ignored in DB
        type: boolean
      user_id:
        type: integer
    type: object
  models.Product:
    properties:
      category:
        type: string
      company:
        $ref: '#/definitions/models.Company'
      company_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      payments:
        items:
          $ref: '#/definitions/models.Payment'
        type: array
      price:
        type: number
      stock:
        type: integer
    type: object
  models.User:
    properties:
      address:
        type: string
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      payments:
        items:
          $ref: '#/definitions/models.Payment'
        type: array
      phone:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Swagger docs for user, product, company, payment history APIs
  title: Payment CRUD API
  version: "1.0"
paths:
  /api/company:
    get:
      description: Retrieves all companys from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Company'
            type: array
      summary: Get all companies
      tags:
      - company
    post:
      consumes:
      - application/json
      description: Adds a new company to the system
      parameters:
      - description: Company to create
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new company
      tags:
      - company
  /api/company/{id}:
    delete:
      description: Removes a company from the database by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a company
      tags:
      - company
    get:
      description: Retrieves a company by their ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get company by ID
      tags:
      - company
    put:
      consumes:
      - application/json
      description: Updates company data by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing company
      tags:
      - company
  /api/payments:
    get:
      description: Retrieves all payments from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payment'
            type: array
      summary: Get all payments
      tags:
      - payments
    post:
      consumes:
      - application/json
      description: Adds a new payment to the system
      parameters:
      - description: Payment to create
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/models.Payment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new payment
      tags:
      - payments
  /api/payments/{id}:
    delete:
      description: Removes a payment from the database by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a payment
      tags:
      - payments
    get:
      description: Retrieves a payment by their ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Payment'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get payment by ID
      tags:
      - payments
    put:
      consumes:
      - application/json
      description: Updates payment data by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated payment
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/models.Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing payment
      tags:
      - payments
  /api/users:
    get:
      description: Retrieves all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Adds a new user to the system
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /api/users/{id}:
    delete:
      description: Removes a user from the database by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - users
    get:
      description: Retrieves a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates user data by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing user
      tags:
      - users
  /api/users/placeOrder:
    post:
      consumes:
      - application/json
      description: User places an order for a product with optional rewards
      parameters:
      - description: Order request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Payment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Place an order
      tags:
      - users
swagger: "2.0"
